---
title: "Pregnancy Related Mortality"
author: "Jihyeon Kwon"
format: 
  html:
    self-contained: true
    toc: true
    toc-depth: 4
execute:
  warning: false
  message: false
  echo: false
editor: visual
---

## Setup
```{r}
library(here)
library(sf)
library(tidyverse)
library(RColorBrewer)
library(tibble)
library(knitr)
```

## Models

- **Data**
  - **Space**: 49 states in the contiguous U.S. (necessary for spatial modeling)
  - **Time**: 6 years (2013–2023)
  - **Group**: Pregnant people vs. non-pregnant women aged 10–44  
    - The denominator for pregnancy-related mortality was estimated using the number of live births among people aged 10–44 (exception: in 2018 and 2019, live births among those aged 15–44 were used; we assume the difference is negligible).
    - The denominator for non-pregnancy-related female mortality was estimated as:  
      *(total female population aged 10–44) – (live births among people aged 10–44)*  
    - We acknowledge that this approach may not produce entirely exclusive groups, but it represents our best approximation given the data available.
  - **Causes**: Homicide, suicide, and Overdose

```{r}
I <- 49
T <- 6
T_name <- 2018:2023
K <- 2
K_name <- c("Preg", "NonPreg")
J <- 3
J_name <- c("homicide_sum", "suicide_sum", "drug_sum")
```

- **Model**
  - **Overall Goal**: To examine the spatial and temporal trends in homicide, suicide, and overdose-related mortality rates among pregnant people and non-pregnant women.
  - **CAR (Conditional AutoRegressive Model)**:  
    Accounts for spatial correlation. Time, group, and cause are treated as independent.
  - **MCAR (Multivariate CAR)**:  
    Accounts for spatial and group correlation.  
    - Chosen to allow borrowing of strength from the non-pregnant group, which has more data to inform estimates for pregnant individuals.
    - If we believe there is correlation between the two groups (which is likely), and we want to compare them, this model is preferable to a standard CAR model since it does not ignore inter-group dependence.
  - **MSTCAR (Multivariate Spatio-Temporal CAR)**:  
    Accounts for spatial, group, and temporal correlation (while treating causes independently).  
    - In addition to MCAR, this model allows sharing of information across years.
    - If temporal correlation exists (which is likely), accounting for it is desirable. However, it’s important to examine how the temporal smoothing affects trends, especially around COVID-19, when we might not expect a smooth pattern over time.
    
## Results 1: Overall Trends

This plot compares the baseline mortality rates—essentially the intercepts representing national-level estimates—across the 49 contiguous states. These values are interpreted as the national-level baseline for each model. Note that the estimates are not population-weighted. We plan to incorporate weighting later and are currently considering what weights would be most appropriate.

Credible interval (Bayesian version of confidence interval) will be added soon.

### Load Output

```{r}
param <- "medians_beta" # this is what we're interested across the models

CAR_beta <- MCAR_beta <- MSTCAR_beta <- array(NA, dim = c(K, T, J))
dimnames(CAR_beta)[[1]] <-
  dimnames(MCAR_beta)[[1]] <-
  dimnames(MSTCAR_beta)[[1]] <- K_name
dimnames(CAR_beta)[[2]] <-
  dimnames(MCAR_beta)[[2]] <-
  dimnames(MSTCAR_beta)[[2]] <- T_name
dimnames(CAR_beta)[[3]] <-
  dimnames(MCAR_beta)[[3]] <-
  dimnames(MSTCAR_beta)[[3]] <- J_name

# MSTCAR
for (j in 1:J) {
  path <- here(paste0("results/MSTCAR/output/MSTCAR_", J_name[j], "_results.Rdata"))
  load(path) # assumes this loads an object that includes 'medians_beta'

  # Add to MSTCAR_beta
  MSTCAR_beta[, , j] <- get(param)
}

# MCAR
for (j in 1:J) {
  for (t in 1:T) {
    path <- here(paste0("results/MCAR/output/MCAR_", J_name[j], "_", T_name[t], "_results.Rdata"))
    load(path) # assumes this loads an object that includes 'medians_beta'

    # Add to MCAR_beta
    MCAR_beta[, t, j] <- get(param)
  }
}

# CAR
for (j in 1:J) {
  for (t in 1:T) {
    for (k in 1:K) {
      path <- here(paste0("results/CAR/output/CAR_", K_name[k], "_", J_name[j], "_", T_name[t], "_results.Rdata"))
      load(path) # assumes this loads an object that includes 'medians_beta'

      # Add to MSTCAR_beta
      CAR_beta[k, t, j] <- get(param)
    }
  }
}
```

```{r}
plot_trend <- function(data, ylim = NULL, main = NULL) {
  # Plot
  matplot(
    x = T_name, y = t(data), type = "l", lty = 1, col = c("red", "black"),
    xlab = "Year", ylab = "Rate per 100,000", main = main, ylim = ylim
  )

  legend("topleft", legend = K_name, col = c("red", "black"), lty = 1, cex = 0.8)
}
```

### Homicide per 100,000 live births (or individuals)
```{r}
j <- 1
# Extract & scale for plotting
CAR_scaled <- CAR_beta[, , j] * 1e5 # K × T matrix
MCAR_scaled <- MCAR_beta[, , j] * 1e5
MSTCAR_scaled <- MSTCAR_beta[, , j] * 1e5

# Determine common y-axis range
y_range <- range(CAR_scaled, MCAR_scaled, MSTCAR_scaled, na.rm = TRUE)

# Set up plotting area: 1 row, 3 columns
par(mfrow = c(1, 3), mar = c(4, 4, 3, 1))

# Get the common range

plot_trend(data = CAR_scaled, ylim = y_range, main = "CAR")
plot_trend(data = MCAR_scaled, ylim = y_range, main = "MCAR")
plot_trend(data = MSTCAR_scaled, ylim = y_range, main = "MSTCAR")
```

#### % Change since 2018
```{r}
get_pct_change <- function(beta_array, k, j) {
  round((beta_array[k, 2:T, j] - beta_array[k, 1, j]) / beta_array[k, 1, j] * 100, 1)
}

get_pct_change_2020 <- function(beta_array, k, j) {
  round((beta_array[k, c(1, 2, 4:T), j] - beta_array[k, 3, j]) / beta_array[k, 3, j] * 100, 1)
}
```

Note the % change among pregnant individuals is higher.
```{r}
j <- 1

# Create table
pct_change_tbl <- tibble(
  Year = T_name[2:T],
  `CAR (Preg)`    = get_pct_change(CAR_beta, 1, j),
  `MCAR (Preg)`   = get_pct_change(MCAR_beta, 1, j),
  `MSTCAR (Preg)` = get_pct_change(MSTCAR_beta, 1, j),
  `CAR (Non-Preg)`    = get_pct_change(CAR_beta, 2, j),
  `MCAR (Non-Preg)`   = get_pct_change(MCAR_beta, 2, j),
  `MSTCAR (Non-Preg)` = get_pct_change(MSTCAR_beta, 2, j)
)

# Print nicely
kable(pct_change_tbl, caption = "Percent Change from First Year (Preg vs Non-Preg)")
```

#### % Change compared to 2020

```{r}
j <- 1

# Create table
pct_change_tbl <- tibble(
  Year = T_name[c(1,2,4:T)],
  `CAR (Preg)`    = get_pct_change_2020(CAR_beta, 1, j),
  `MCAR (Preg)`   = get_pct_change_2020(MCAR_beta, 1, j),
  `MSTCAR (Preg)` = get_pct_change_2020(MSTCAR_beta, 1, j),
  `CAR (Non-Preg)`    = get_pct_change_2020(CAR_beta, 2, j),
  `MCAR (Non-Preg)`   = get_pct_change_2020(MCAR_beta, 2, j),
  `MSTCAR (Non-Preg)` = get_pct_change_2020(MSTCAR_beta, 2, j)
)

# Print nicely
kable(pct_change_tbl, caption = "Percent Change Compared to 2020 (Preg vs Non-Preg)")
```

### Suicide per 100,000 live births (or individuals)
```{r}
j <- 2
# Extract & scale for plotting
CAR_scaled <- CAR_beta[, , j] * 1e5 # K × T matrix
MCAR_scaled <- MCAR_beta[, , j] * 1e5
MSTCAR_scaled <- MSTCAR_beta[, , j] * 1e5

# Determine common y-axis range
y_range <- range(CAR_scaled, MCAR_scaled, MSTCAR_scaled, na.rm = TRUE)

# Set up plotting area: 1 row, 3 columns
par(mfrow = c(1, 3), mar = c(4, 4, 3, 1))

# Get the common range

plot_trend(data = CAR_scaled, ylim = y_range, main = "CAR")
plot_trend(data = MCAR_scaled, ylim = y_range, main = "MCAR")
plot_trend(data = MSTCAR_scaled, ylim = y_range, main = "MSTCAR")
```

#### % Change since 2018
The rate was notably high for pregnant individuals in 2022, but dropped below 2018 levels by 2023.

```{r}
j <- 2

# Create table
pct_change_tbl <- tibble(
  Year = T_name[2:T],
  `CAR (Preg)`    = get_pct_change(CAR_beta, 1, j),
  `MCAR (Preg)`   = get_pct_change(MCAR_beta, 1, j),
  `MSTCAR (Preg)` = get_pct_change(MSTCAR_beta, 1, j),
  `CAR (Non-Preg)`    = get_pct_change(CAR_beta, 2, j),
  `MCAR (Non-Preg)`   = get_pct_change(MCAR_beta, 2, j),
  `MSTCAR (Non-Preg)` = get_pct_change(MSTCAR_beta, 2, j)
)

# Print nicely
kable(pct_change_tbl, caption = "Percent Change from First Year (Preg vs Non-Preg)")
```

#### % Change compared to 2020
Note how it is so much higher for the pregnant people in 2022.
```{r}
j <- 2

# Create table
pct_change_tbl <- tibble(
  Year = T_name[c(1,2,4:T)],
  `CAR (Preg)`    = get_pct_change_2020(CAR_beta, 1, j),
  `MCAR (Preg)`   = get_pct_change_2020(MCAR_beta, 1, j),
  `MSTCAR (Preg)` = get_pct_change_2020(MSTCAR_beta, 1, j),
  `CAR (Non-Preg)`    = get_pct_change_2020(CAR_beta, 2, j),
  `MCAR (Non-Preg)`   = get_pct_change_2020(MCAR_beta, 2, j),
  `MSTCAR (Non-Preg)` = get_pct_change_2020(MSTCAR_beta, 2, j)
)

# Print nicely
kable(pct_change_tbl, caption = "Percent Change Compared to 2020 (Preg vs Non-Preg)")
```

### Overdose per 100,000 live births (or individuals)
```{r}
j <- 3
# Extract & scale for plotting
CAR_scaled <- CAR_beta[, , j] * 1e5 # K × T matrix
MCAR_scaled <- MCAR_beta[, , j] * 1e5
MSTCAR_scaled <- MSTCAR_beta[, , j] * 1e5

# Determine common y-axis range
y_range <- range(CAR_scaled, MCAR_scaled, MSTCAR_scaled, na.rm = TRUE)

# Set up plotting area: 1 row, 3 columns
par(mfrow = c(1, 3), mar = c(4, 4, 3, 1))

# Get the common range

plot_trend(data = CAR_scaled, ylim = y_range, main = "CAR")
plot_trend(data = MCAR_scaled, ylim = y_range, main = "MCAR")
plot_trend(data = MSTCAR_scaled, ylim = y_range, main = "MSTCAR")
```

#### % Change since 2018
Higher among the pregnant individuals.

```{r}
j <- 3

# Create table
pct_change_tbl <- tibble(
  Year = T_name[2:T],
  `CAR (Preg)`    = get_pct_change(CAR_beta, 1, j),
  `MCAR (Preg)`   = get_pct_change(MCAR_beta, 1, j),
  `MSTCAR (Preg)` = get_pct_change(MSTCAR_beta, 1, j),
  `CAR (Non-Preg)`    = get_pct_change(CAR_beta, 2, j),
  `MCAR (Non-Preg)`   = get_pct_change(MCAR_beta, 2, j),
  `MSTCAR (Non-Preg)` = get_pct_change(MSTCAR_beta, 2, j)
)

# Print nicely
kable(pct_change_tbl, caption = "Percent Change from First Year (Preg vs Non-Preg)")
```

#### % Change compared to 2020

```{r}
j <- 3

# Create table
pct_change_tbl <- tibble(
  Year = T_name[c(1,2,4:T)],
  `CAR (Preg)`    = get_pct_change_2020(CAR_beta, 1, j),
  `MCAR (Preg)`   = get_pct_change_2020(MCAR_beta, 1, j),
  `MSTCAR (Preg)` = get_pct_change_2020(MSTCAR_beta, 1, j),
  `CAR (Non-Preg)`    = get_pct_change_2020(CAR_beta, 2, j),
  `MCAR (Non-Preg)`   = get_pct_change_2020(MCAR_beta, 2, j),
  `MSTCAR (Non-Preg)` = get_pct_change_2020(MSTCAR_beta, 2, j)
)

# Print nicely
kable(pct_change_tbl, caption = "Percent Change Compared to 2020 (Preg vs Non-Preg)")
```


## Results 2: Maps

```{r}
# load spatial info
load(here("data/processed/state-shape-file.Rdata"))
```

```{r}
param <- "medians_theta" # this is what we're interested across the models

CAR_theta <- MCAR_theta <- MSTCAR_theta <- array(NA, dim = c(I, K, T, J))
dimnames(CAR_theta)[[1]] <-
  dimnames(MCAR_theta)[[1]] <-
  dimnames(MSTCAR_theta)[[1]] <- state_sf$state_name
dimnames(CAR_theta)[[2]] <-
  dimnames(MCAR_theta)[[2]] <-
  dimnames(MSTCAR_theta)[[2]] <- K_name
dimnames(CAR_theta)[[3]] <-
  dimnames(MCAR_theta)[[3]] <-
  dimnames(MSTCAR_theta)[[3]] <- T_name
dimnames(CAR_theta)[[4]] <-
  dimnames(MCAR_theta)[[4]] <-
  dimnames(MSTCAR_theta)[[4]] <- J_name

# MSTCAR
for (j in 1:J) {
  path <- here(paste0("results/MSTCAR/output/MSTCAR_", J_name[j], "_results.Rdata"))
  load(path) # assumes this loads an object that includes 'medians_theta'

  # Add to MSTCAR_theta
  MSTCAR_theta[, , , j] <- get(param)
}

# MCAR
for (j in 1:J) {
  for (t in 1:T) {
    path <- here(paste0("results/MCAR/output/MCAR_", J_name[j], "_", T_name[t], "_results.Rdata"))
    load(path) # assumes this loads an object that includes 'medians_theta'

    # Add to MCAR_theta
    MCAR_theta[, , t, j] <- get(param)
  }
}

# CAR
for (j in 1:J) {
  for (t in 1:T) {
    for (k in 1:K) {
      path <- here(paste0("results/CAR/output/CAR_", K_name[k], "_", J_name[j], "_", T_name[t], "_results.Rdata"))
      load(path) # assumes this loads an object that includes 'medians_theta'

      # Add to MSTCAR_theta
      CAR_theta[, k, t, j] <- get(param)
    }
  }
}
```

```{r}
ncols <- 6
cols <- c(brewer.pal(ncols, "Reds"), "gray")

plot_map <- function(data, tcuts = tcuts, tcuts0 = tcuts0, ylim = NULL, main = NULL, legend_cex = 1) {
  if (is.null(main)) {
    par(mar = c(0, 0, 0, 0) + .1, cex = 1, cex.lab = 4 / 5)
  } else {
    par(mar = c(0, 0, 1, 0) + .1, cex = 1, cex.lab = 4 / 5) 
  }

  tcolb <- array(rep(data, each = ncols - 1) > tcuts,
    dim = c(ncols - 1, I)
  )
  tcol <- apply(tcolb, 2, sum) + 1

  plot(state_sf$geometry, col = cols[tcol], main = main)

  legend("bottomright", 
    legend = paste(
      c("Below", tcuts0[-(ncols - 1)], "Over"),
      c(" ", rep(" - ", ncols - 2), " "),
      c(tcuts0, tcuts0[ncols - 1]), "",
      sep = ""
    ),
    fill = cols, title = "Per 100,000",
    bty = "n", cex = legend_cex, border = "lightgray"
  )
}

```

### Homicide 

#### CAR

##### Pregnant People
```{r}
k <- 1
j <- 1
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = CAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Non-pregnant Women
```{r}
k <- 2
j <- 1
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = CAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```


##### Pregnant Individuals vs Non-pregnant Women
Using the common legends for these two groups

```{r}
j <- 1
thetas <- c(CAR_theta[, , , j], MCAR_theta[, , , j], MSTCAR_theta[, , , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(3, 2), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = CAR_theta[, 1, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Preg:", T_name[t]), legend_cex = 0.5)
  plot_map(data = CAR_theta[, 2, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Not-Preg:", T_name[t]), legend_cex = 0.5)
}

```



#### MCAR

##### Pregnant People
```{r}
k <- 1
j <- 1
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Non-pregnant Women
```{r}
k <- 2
j <- 1
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Pregnant Individuals vs Non-pregnant Women
Using the common legends for these two groups
```{r}
j <- 1
thetas <- c(CAR_theta[, , , j], MCAR_theta[, , , j], MSTCAR_theta[, , , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(3, 2), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MCAR_theta[, 1, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Preg:", T_name[t]), legend_cex = 0.5)
  plot_map(data = MCAR_theta[, 2, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Not-Preg:", T_name[t]), legend_cex = 0.5)
}

```



#### MSTCAR

##### Pregnant People
```{r}
k <- 1
j <- 1
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MSTCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Non-pregnant Women
```{r}
k <- 2
j <- 1
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MSTCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Pregnant Individuals vs Non-pregnant Women
Using the common legends for these two groups
```{r}
j <- 1
thetas <- c(CAR_theta[, , , j], MCAR_theta[, , , j], MSTCAR_theta[, , , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(3, 2), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MSTCAR_theta[, 1, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Preg:", T_name[t]), legend_cex = 0.5)
  plot_map(data = MSTCAR_theta[, 2, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Not-Preg:", T_name[t]), legend_cex = 0.5)
}

```







### Suicide 

#### CAR

##### Pregnant People
```{r}
k <- 1
j <- 2
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = CAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Non-pregnant Women
```{r}
k <- 2
j <- 2
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = CAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```


##### Pregnant Individuals vs Non-pregnant Women
Using the common legends for these two groups

```{r}
j <- 2
thetas <- c(CAR_theta[, , , j], MCAR_theta[, , , j], MSTCAR_theta[, , , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(3, 2), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = CAR_theta[, 1, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Preg:", T_name[t]), legend_cex = 0.5)
  plot_map(data = CAR_theta[, 2, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Not-Preg:", T_name[t]), legend_cex = 0.5)
}

```



#### MCAR

##### Pregnant People
```{r}
k <- 1
j <- 2
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Non-pregnant Women
```{r}
k <- 2
j <- 2
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Pregnant Individuals vs Non-pregnant Women
Using the common legends for these two groups
```{r}
j <- 2
thetas <- c(CAR_theta[, , , j], MCAR_theta[, , , j], MSTCAR_theta[, , , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(3, 2), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MCAR_theta[, 1, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Preg:", T_name[t]), legend_cex = 0.5)
  plot_map(data = MCAR_theta[, 2, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Not-Preg:", T_name[t]), legend_cex = 0.5)
}

```



#### MSTCAR

##### Pregnant People
```{r}
k <- 1
j <- 2
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MSTCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Non-pregnant Women
```{r}
k <- 2
j <- 2
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MSTCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Pregnant Individuals vs Non-pregnant Women
Using the common legends for these two groups
```{r}
j <- 2
thetas <- c(CAR_theta[, , , j], MCAR_theta[, , , j], MSTCAR_theta[, , , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(3, 2), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MSTCAR_theta[, 1, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Preg:", T_name[t]), legend_cex = 0.5)
  plot_map(data = MSTCAR_theta[, 2, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Not-Preg:", T_name[t]), legend_cex = 0.5)
}

```







### Overdose

#### CAR

##### Pregnant People
```{r}
k <- 1
j <- 3
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = CAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Non-pregnant Women
```{r}
k <- 2
j <- 3
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = CAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```


##### Pregnant Individuals vs Non-pregnant Women
Using the common legends for these two groups

```{r}
j <- 3
thetas <- c(CAR_theta[, , , j], MCAR_theta[, , , j], MSTCAR_theta[, , , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(3, 2), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = CAR_theta[, 1, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Preg:", T_name[t]), legend_cex = 0.5)
  plot_map(data = CAR_theta[, 2, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Not-Preg:", T_name[t]), legend_cex = 0.5)
}

```



#### MCAR

##### Pregnant People
```{r}
k <- 1
j <- 3
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Non-pregnant Women
```{r}
k <- 2
j <- 3
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Pregnant Individuals vs Non-pregnant Women
Using the common legends for these two groups
```{r}
j <- 3
thetas <- c(CAR_theta[, , , j], MCAR_theta[, , , j], MSTCAR_theta[, , , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(3, 2), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MCAR_theta[, 1, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Preg:", T_name[t]), legend_cex = 0.5)
  plot_map(data = MCAR_theta[, 2, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Not-Preg:", T_name[t]), legend_cex = 0.5)
}

```



#### MSTCAR

##### Pregnant People
```{r}
k <- 1
j <- 3
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MSTCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Non-pregnant Women
```{r}
k <- 2
j <- 3
thetas <- c(CAR_theta[, k, , j], MCAR_theta[, k, , j], MSTCAR_theta[, k, , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(2, 3), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MSTCAR_theta[, k, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = T_name[t], legend_cex = 0.5)
}
```
##### Pregnant Individuals vs Non-pregnant Women
Using the common legends for these two groups
```{r}
j <- 3
thetas <- c(CAR_theta[, , , j], MCAR_theta[, , , j], MSTCAR_theta[, , , j]) 
tcuts <- quantile(thetas, (1:(ncols - 1)) / ncols) # for categories
tcuts0 <- format(round(tcuts * 10^5, digits = 1), nsmall = 0, trim = TRUE) # for legend

# CAR
par(mfrow = c(3, 2), mar = c(4, 4, 3, 1))
for (t in 1:T) {
  plot_map(data = MSTCAR_theta[, 1, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Preg:", T_name[t]), legend_cex = 0.5)
  plot_map(data = MSTCAR_theta[, 2, t, j], tcuts = tcuts, tcuts0 = tcuts0, main = paste0("Not-Preg:", T_name[t]), legend_cex = 0.5)
}

```